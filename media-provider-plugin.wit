package spaeher:core;

interface media-provider-plugin-emit-events {
    use jobs.{job-progress};
    emit-job-progress-event: func(progress: job-progress);
}

interface media-provider-plugin-receive-events {
    
}

world media-provider-plugin {
    record root-folder {
        id: string,
        path: string,
        duration: u32,
        created-unix:  u64
    }
    record folder {
        id: string,
        name: string,
        root-folder-id: string,
        relative-path: string,
        relative-depth: u32,
        duration: u32,
        indexed-unix: u64
    }
    record file {
        id: string,
        name: string,
        root-folder-id: string,
        relative-path: string,
        relative-depth: u32,
        duration:  u32,
        indexed-unix: u64
    }
    variant error {
        not-implemented,
        path-does-not-exist(string),
        root-folder-does-not-exist(string),
        file-does-not-exist(string),
        folder-does-not-exist(string)
    }

    import logging;
    import media-provider-plugin-emit-events;
    export media-provider-plugin-receive-events;

    export add-root-folder: func(path: string) -> result<root-folder, error>;
    export remove-root-folder: func(root-folder-id: string) -> result<_, error>;

    export index-path: func(root-folder-id: string, path: string, job-id: string) -> result<u32, error>;

    export find-file: func(root-index-id: string, path: string) -> result<file, error>;
    export get-file: func(root-folder-id: string, file-id: string) -> result<file, error>;
    export find-folder: func(root-folder-id: string, path: string) -> result<folder, error>;
    export get-folder: func(root-folder-id: string, folder-id: string) -> result<folder, error>;

    export find-files: func(root-folder-id: string, path: string, page: u32, page-size: u32) -> result<list<file>, error>;
    export get-files: func(root-folder-id: string, folder-id: string, page: u32, page-size: u32) -> result<list<file>, error>;
    export find-folders: func(root-folder-id: string, path: string, page: u32, page-size: u32) -> result<list<folder>, error>;
    export get-folders: func(root-folder-id: string, folder-id: string, page: u32, page-size: u32) -> result<list<folder>, error>;

    // TODO functions for preparing the files for transcribers? maybe download / move them to a specific location?
    // with option for audio only? maybe just return path compatible with ffmpeg?
    // with media-request-id that is being emitted when they are no longer needed
    // also include whether its local

    // TODO function for receiving optional thumbnail?
}